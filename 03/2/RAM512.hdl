// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM512.hdl

/**
 * Memory of 512 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM512[address(t)](t)
 *     Write: If load(t-1) then RAM512[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM512 {

    IN  in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=dmux0, b=dmux1, c=dmux2, d=dmux3, e=dmux4, f=dmux5, g=dmux6, h=dmux7);
    RAM64(in=in, load=dmux0, address=address[0..5], out=mux0);
    RAM64(in=in, load=dmux1, address=address[0..5], out=mux1);
    RAM64(in=in, load=dmux2, address=address[0..5], out=mux2);
    RAM64(in=in, load=dmux3, address=address[0..5], out=mux3);
    RAM64(in=in, load=dmux4, address=address[0..5], out=mux4);
    RAM64(in=in, load=dmux5, address=address[0..5], out=mux5);
    RAM64(in=in, load=dmux6, address=address[0..5], out=mux6);
    RAM64(in=in, load=dmux7, address=address[0..5], out=mux7);
    Mux8Way16(a=mux0, b=mux1, c=mux2, d=mux3, e=mux4, f=mux5, g=mux6, h=mux7, sel=address[6..8], out=out);
}
