// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/1/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {

    IN  in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=loaddmx0, b=loaddmx1, c=loaddmx2, d=loaddmx3, e=loaddmx4, f=loaddmx5, g=loaddmx6, h=loaddmx7);

    Register(in=in, load=loaddmx0, out=outmux0);
    Register(in=in, load=loaddmx1, out=outmux1);
    Register(in=in, load=loaddmx2, out=outmux2);
    Register(in=in, load=loaddmx3, out=outmux3);
    Register(in=in, load=loaddmx4, out=outmux4);
    Register(in=in, load=loaddmx5, out=outmux5);
    Register(in=in, load=loaddmx6, out=outmux6);
    Register(in=in, load=loaddmx7, out=outmux7);

    Mux8Way16(a=outmux0, b=outmux1, c=outmux2, d=outmux3, e=outmux4, f=outmux5, g=outmux6, h=outmux7, sel=address, out=out);
}
