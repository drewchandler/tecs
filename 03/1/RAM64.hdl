// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/1/RAM64.hdl

/**
 * Memory of 64 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM64[address(t)](t)
 *     Write: If load(t-1) then RAM64[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM64 {

    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=dmx0, b=dmx1, c=dmx2, d=dmx3, e=dmx4, f=dmx5, g=dmx6, h=dmx7);

    RAM8(in=in, load=dmx0, address=address[0..2], out=mux0);
    RAM8(in=in, load=dmx1, address=address[0..2], out=mux1);
    RAM8(in=in, load=dmx2, address=address[0..2], out=mux2);
    RAM8(in=in, load=dmx3, address=address[0..2], out=mux3);
    RAM8(in=in, load=dmx4, address=address[0..2], out=mux4);
    RAM8(in=in, load=dmx5, address=address[0..2], out=mux5);
    RAM8(in=in, load=dmx6, address=address[0..2], out=mux6);
    RAM8(in=in, load=dmx7, address=address[0..2], out=mux7);

    Mux8Way16(a=mux0, b=mux1, c=mux2, d=mux3, e=mux4, f=mux5, g=mux6, h=mux7, sel=address[3..5], out=out);
}
